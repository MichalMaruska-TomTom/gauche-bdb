CC = @CC@

BDB_LIB_DIR = -L/usr/lib/
BDB_HEADER_DIR = -I /usr/include/

# These may be overridden by make invocators
DESTDIR  =
OPTFLAGS = @OPTFLAGS@


# These are set by configure
CFLAGS = @CFLAGS@ $(OPTFLAGS) $(BDB_HEADER_DIR) -g -ggdb3 -fpic
LDFLAGS = @LDFLAGS@
BDB_LIBS= -ldb
LIBS = @LIBS@ $(BDB_LIBS)
GOSH = @GOSH@
GAUCHE_CONFIG = @GAUCHE_CONFIG@
GAUCHE_TOP = @GAUCHE_TOP@
INSTALL = @INSTALL@

ARCHFILES := bdb.so
SCMFILES := $(wildcard scm/*.scm)
HEADERS =
SCM_HI_FILES := $(wildcard bdb/*scm dbm/*scm)
BINFILES := $(wildcard bin/*.scm)

TARGET = bdb.so
OBJS = bdb_head.o bdb.o bdb_tail.o bdb-lib.o
CONFIG_GENERATED = Makefile config.cache config.log config.status\
		   autom4te*.cache bdb_head.c bdb_tail.c

INSTALL_TYPE = @INSTALL_TYPE@
HEADER_INSTALL_DIR  = $(DESTDIR)`$(GAUCHE_CONFIG) --$(INSTALL_TYPE)incdir`/
SCM_INSTALL_DIR     = $(DESTDIR)`$(GAUCHE_CONFIG) --$(INSTALL_TYPE)libdir`/
ARCH_INSTALL_DIR    = $(DESTDIR)`$(GAUCHE_CONFIG) --$(INSTALL_TYPE)archdir`/
SCM_HI_INSTALL_DIR =  $(DESTDIR)$$(gauche-config --sitelibdir)
BIN_INSTALL_DIR = /usr/bin

all : $(TARGET)

bdb.so : $(OBJS)
	$(CC) $(LDFLAGS) bdb.so $(OBJS) $(LIBS)

bdb.c : bdb.stub bdb-lib.h
	$(GOSH) genstub bdb.stub

bdb-lib.o:  bdb-lib.c  bdb-lib.h

test : all
	@rm -f test.log
	$(GOSH) -I scm -I . test/test.scm > test.log

install : all
	$(INSTALL) -d $(HEADER_INSTALL_DIR)
	$(INSTALL) -d $(SCM_INSTALL_DIR)
	$(INSTALL) -d $(SCM_HI_INSTALL_DIR)
	$(INSTALL) -d $(ARCH_INSTALL_DIR)
	$(INSTALL) -D --directory $(DESTDIR)$(BIN_INSTALL_DIR)
	@for f in $(HEADERS) _end; do \
	  if test $$f != _end; then \
	    $(INSTALL) -m 444 $$f $(HEADER_INSTALL_DIR); \
	  fi; \
	done
	@for f in $(SCMFILES) _end; do \
	  if test $$f != _end; then \
	    $(INSTALL) -m 444 $$f $(SCM_INSTALL_DIR); \
	  fi; \
	done
	@for f in $(SCM_HI_FILES) _end; do \
	  if test $$f != _end; then \
	    $(INSTALL) --verbose -D -m 444 $$f $(SCM_HI_INSTALL_DIR)/$$f; \
	  fi; \
	done
	@for f in $(ARCHFILES) _end; do \
	  if test $$f != _end; then \
	    $(INSTALL) -m 555 $$f $(ARCH_INSTALL_DIR); \
	  fi; \
	done
	for p in $(BINFILES); do \
	  $(INSTALL) -v -m 555 $$p $(DESTDIR)$(BIN_INSTALL_DIR) ; \
	done





clean :
	rm -rf core $(TARGET) $(OBJS) *~ test.log so_locations

distclean : clean
	rm -rf $(CONFIG_GENERATED)

realclean : clean
	rm -rf $(CONFIG_GENERATED) configure

# 'link' creates symlinks from source tree to extension modules, so that
# it can be tested within the source tree.  'unlink' removes them.
# these are only for developer's.

link : $(TARGET) $(SCMFILES)
	$(GOSH) ../xlink -d gauche -l $(TARGET) $(SCMFILES)

unlink :
	-$(GOSH) ../xlink -d gauche -u $(TARGET) $(SCMFILES)


version=$(shell cat VERSION)
package=gauche-bdb

##  for the maintainer/distributor:
tar:
	make -f ../makefile.packages  version=$(version) package=$(package)


